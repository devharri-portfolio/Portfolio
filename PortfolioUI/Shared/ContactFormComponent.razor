@using PortfolioUI.Models
@using PortfolioUI.Services

@inject IJSRuntime JSRuntime
@inject GoogleCaptchaService googleCaptchaService

@if (FormSubmitted)
{
    <div class="alert alert-@FormSubmitAlert alert-dismissible fade show" role="alert">
        @FormSubmitText
        <button type="button" class="btn-close" @onclick="CloseSubmitAlert"></button>
    </div>
}

<EditForm Model="@contactFormModel" class="row justify-content-center" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <div class="text-center">
        <p class="text-muted">Want to discuss about something? Love to hear from you, write me a message!</p>
    </div>
    <div class="col-md-6">
        <div class="mb-2">
            <label for="firstNameContactForm" class="form-label mb-0">First name</label>
            <InputText id="firstNameContactForm" @bind-Value="contactFormModel.FirstName" class="form-control" placeholder="First name" disabled />
        </div>
    </div>
    <div class="col-md-6">
        <div class="mb-2">
            <label for="lastNameContactForm" class="form-label mb-0">Last name</label>
            <InputText id="lastNameContactForm" @bind-Value="contactFormModel.LastName" class="form-control" placeholder="Last name" disabled />
        </div>
    </div>
    <div class="col-md-12">
        <div class="mb-1">
            <label for="messageContactForm" class="form-label mb-0">Message</label>
            <InputTextArea id="messageContactForm" @bind-Value="contactFormModel.Message" class="form-control" placeholder="Message" rows="3" disabled />
        </div>
    </div>
    <input id="tokenContactForm" type="hidden" @bind="@contactFormModel.Token" />
    <ValidationSummary />
    <div>
        <p class="grecaptcha-text">
            This site is protected by reCAPTCHA and the Google
            <a href="https://policies.google.com/privacy">Privacy Policy</a> and
            <a href="https://policies.google.com/terms">Terms of Service</a> apply.
        </p>
    </div>
    <div class="col-md-12">
        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Send</button>
        </div>
    </div>

</EditForm>

@code {
    private ContactFormModel contactFormModel = new();

    bool FormSubmitted = false;
    string FormSubmitAlert = "danger";
    string FormSubmitText = "default";

    //Functions after blazor has rendered all components
    protected override void OnAfterRender(bool firstRender)
    {
        // execute conditionally for loading data, otherwise this will load
        // every time the page refreshes
        if (firstRender)
        {
            // Do work to load page data and set properties
            RunReCaptchaJavascript();
        }
    }

    private async Task HandleSubmit()
    {
        //Verify token
        bool verification = await googleCaptchaService.VerifyToken(contactFormModel.Token);

        if (verification == true)
        {
            // Process the form

            //Show form submit alert
            FormSubmitted = true;
            FormSubmitAlert = "success";
            FormSubmitText = "Message on the way. Thank you for your message!";

            //Clear the form
            ClearForm();
        }
        else
        {
            //Show form submit alert
            FormSubmitted = true;
            FormSubmitAlert = "danger";
            FormSubmitText = "Ooops something went wrong.. Please refresh the page!";

            //Clear the form
            ClearForm();
        }
    }

    private void RunReCaptchaJavascript()
    {
        //Run Google reCaptcha JavaScript-function from index.html for getting new Token
        JSRuntime.InvokeVoidAsync("runReCaptcha");
    }

    private void ClearForm()
    {
        //Clear the form
        contactFormModel = new();
        //Get new Token
        RunReCaptchaJavascript();
    }

    private void CloseSubmitAlert()
    {
        FormSubmitted = false;
}
}